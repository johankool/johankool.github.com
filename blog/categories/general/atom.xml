<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: general | Koolistov]]></title>
  <link href="http://koolistov.net/blog/categories/general/atom.xml" rel="self"/>
  <link href="http://koolistov.net/"/>
  <updated>2013-03-29T00:31:04+08:00</updated>
  <id>http://koolistov.net/</id>
  <author>
    <name><![CDATA[Johan Kool]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Managing user satisfaction]]></title>
    <link href="http://koolistov.net/blog/2012/03/08/managing-user-satisfaction/"/>
    <updated>2012-03-08T11:43:00+08:00</updated>
    <id>http://koolistov.net/blog/2012/03/08/managing-user-satisfaction</id>
    <content type="html"><![CDATA[<p>It is the day after the day a new iPad was announced. As always, before the announcement of what the new iPad was really going to be, rumors and speculation ran high. Way high.</p>

<!-- more -->


<p>Some rumors were correct: Retina Display. Some rumors were off: touch feedback. Nevertheless, afterwards (and this time, heck why not, already before) many articles appeared all over the internet claiming disappointment with what the new iPad offers.</p>

<p><span class='pullquote-right' data-pullquote='A satisfied customer is one that comes back to buy again.'>
There is something important overlooked though: the satisfaction of existing iPad users. Apple wants to woo in new customers, but it also wants to keep existing customers satisfied. A satisfied customer is one that comes back to buy again. And one of the surest way to piss off a customer? Coming out with a new much improved model shortly after they bought theirs. Sure, this still happens, but Apple makes sure that the improvement is such that an existing user can justify either way to buy or not buy the new model. Users of models that are two generations older have a much harder timer resisting the new model. But theirs is by then almost 2 years old, a ripe old age for any tech gadget.
</span></p>

<p>So the reason for the disappointment amongst the tech journalists covering the new iPad comes from the fact that Apple doses the improvements well. Unlike regular iPad users, they have to upgrade, because it is their job to cover the latest and greatest. The regular users however can chose either way and still feel satisfied with their choice. They'll keep liking their current iPad, or they'll fall in love with their new iPad.</p>

<p>This pattern is also clearly playing out for the iPhone. For iPhone 4 users the iPhone 4S looks like a nice upgrade, for owners of the iPhone 3GS and older models it is pretty much irresistible.</p>

<p>That's all there is to it.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[A Fresh New Website]]></title>
    <link href="http://koolistov.net/blog/2011/09/17/a-fresh-new-website/"/>
    <updated>2011-09-17T13:00:00+08:00</updated>
    <id>http://koolistov.net/blog/2011/09/17/a-fresh-new-website</id>
    <content type="html"><![CDATA[<p>A fresh new website for Koolistov is finally here. As Koolistov recently incorporated in Singapore as a private limited company, an update to its website was more than overdue. The old started to show its age, and although I applied a somewhat fresher CSS style to it, it still didn't feel quite right.</p>

<p>The legendary <a href="http://mattgemmell.com/2011/09/12/blogging-with-octopress/">Matt Gemmell</a> had been feeling the need to freshen up his personal blog recently too, and this is how I got to learn about <a href="http://octopress.org/">Octopress</a>. Octopress is framework based on <a href="https://github.com/mojombo/jekyll">Jekyll</a> created by <a href="http://twitter.com/imathis">Brandon Mathis</a>. It provides you with a great looking, HTML5 based blog. You run it locally on your own computer where it creates a static website which can be hosted anywhere. Despite being static, it actually offers quite a nice number of features by wisely letting established third parties take care of those, such as comments and searching. It's quite configurable, and by creating static html you are not getting locked in to one hosting provider. Great stuff!</p>

<!--more-->


<p>Octopress has support for deploying directly to GitHub Pages, or <code>rsync</code>-ing to a plain webserver. However, the previous website of Koolistov was running on <a href="http://code.google.com/appengine/">Google App Engine</a>. There are a few features that I implemented there that are in use by some of my apps, and/or that I would not really want to part with. As it turns out, I can have the best of both worlds: keep my website on Google App Engine, and use Octopress.</p>

<p>The first hurdle though was to get Octopress to run locally. The installation isn't particularly difficult but there was one gotcha worth mentioning. The installation instructions assume that you are using the <code>bash</code> shell on Mac OS X. If, like me, you have been using a Mac OS X for longer than you can remember, yours may still be the <code>tcsh</code> shell. Once I did the installation via a temporary <code>bash</code> shell, and also use such a <code>bash</code> shell when working with Octopress, all is fine. Maybe someday I'll catch up with the times and change my default shell to <code>bash</code>, but that's not for today.</p>

<p>A number of solutions showed up when searching for ways of hosting a static website via Google App Engine. By far the best solution I found made it as easy as putting everything in a folder named <code>static</code> and adding a bunch of handlers to <code>app.yaml</code>. This solution beats others in that it doesn't require any processing, and that it can serve up the <code>index.html</code> of a folder when such folder is accessed without resorting to performing redirect to the <code>index.html</code>.</p>

<p><div><script src='https://gist.github.com/873098.js?file=app.yaml'></script>
<noscript><pre><code>application: you-app-name-here
version: 1
runtime: python
api_version: 1

default_expiration: &quot;30d&quot;

handlers:
- url: /(.*\.(appcache|manifest))
  mime_type: text/cache-manifest
  static_files: static/\1
  upload: static/(.*\.(appcache|manifest))
  expiration: &quot;0m&quot;

- url: /(.*\.atom)
  mime_type: application/atom+xml
  static_files: static/\1
  upload: static/(.*\.atom)
  expiration: &quot;1h&quot;

- url: /(.*\.crx)
  mime_type: application/x-chrome-extension
  static_files: static/\1
  upload: static/(.*\.crx)

- url: /(.*\.css)
  mime_type: text/css
  static_files: static/\1
  upload: static/(.*\.css)

- url: /(.*\.eot)
  mime_type: application/vnd.ms-fontobject
  static_files: static/\1
  upload: static/(.*\.eot)

- url: /(.*\.htc)
  mime_type: text/x-component
  static_files: static/\1
  upload: static/(.*\.htc)

- url: /(.*\.html)
  mime_type: text/html
  static_files: static/\1
  upload: static/(.*\.html)
  expiration: &quot;1h&quot;

- url: /(.*\.ico)
  mime_type: image/x-icon
  static_files: static/\1
  upload: static/(.*\.ico)
  expiration: &quot;7d&quot;

- url: /(.*\.js)
  mime_type: text/javascript
  static_files: static/\1
  upload: static/(.*\.js)

- url: /(.*\.json)
  mime_type: application/json
  static_files: static/\1
  upload: static/(.*\.json)
  expiration: &quot;1h&quot;

- url: /(.*\.m4v)
  mime_type: video/m4v
  static_files: static/\1
  upload: static/(.*\.m4v)

- url: /(.*\.mp4)
  mime_type: video/mp4
  static_files: static/\1
  upload: static/(.*\.mp4)

- url: /(.*\.(ogg|oga))
  mime_type: audio/ogg
  static_files: static/\1
  upload: static/(.*\.(ogg|oga))

- url: /(.*\.ogv)
  mime_type: video/ogg
  static_files: static/\1
  upload: static/(.*\.ogv)

- url: /(.*\.otf)
  mime_type: font/opentype
  static_files: static/\1
  upload: static/(.*\.otf)

- url: /(.*\.rss)
  mime_type: application/rss+xml
  static_files: static/\1
  upload: static/(.*\.rss)
  expiration: &quot;1h&quot;

- url: /(.*\.safariextz)
  mime_type: application/octet-stream
  static_files: static/\1
  upload: static/(.*\.safariextz)

- url: /(.*\.(svg|svgz))
  mime_type: images/svg+xml
  static_files: static/\1
  upload: static/(.*\.(svg|svgz))

- url: /(.*\.swf)
  mime_type: application/x-shockwave-flash
  static_files: static/\1
  upload: static/(.*\.swf)

- url: /(.*\.ttf)
  mime_type: font/truetype
  static_files: static/\1
  upload: static/(.*\.ttf)

- url: /(.*\.txt)
  mime_type: text/plain
  static_files: static/\1
  upload: static/(.*\.txt)

- url: /(.*\.unity3d)
  mime_type: application/vnd.unity
  static_files: static/\1
  upload: static/(.*\.unity3d)

- url: /(.*\.webm)
  mime_type: video/webm
  static_files: static/\1
  upload: static/(.*\.webm)

- url: /(.*\.webp)
  mime_type: image/webp
  static_files: static/\1
  upload: static/(.*\.webp)

- url: /(.*\.woff)
  mime_type: application/x-font-woff
  static_files: static/\1
  upload: static/(.*\.woff)

- url: /(.*\.xml)
  mime_type: application/xml
  static_files: static/\1
  upload: static/(.*\.xml)
  expiration: &quot;1h&quot;

- url: /(.*\.xpi)
  mime_type: application/x-xpinstall
  static_files: static/\1
  upload: static/(.*\.xpi)

# image files
- url: /(.*\.(bmp|gif|ico|jpeg|jpg|png))
  static_files: static/\1
  upload: static/(.*\.(bmp|gif|ico|jpeg|jpg|png))

# audio files
- url: /(.*\.(mid|midi|mp3|wav))
  static_files: static/\1
  upload: static/(.*\.(mid|midi|mp3|wav))  

# windows files
- url: /(.*\.(doc|exe|ppt|rtf|xls))
  static_files: static/\1
  upload: static/(.*\.(doc|exe|ppt|rtf|xls))

# compressed files
- url: /(.*\.(bz2|gz|rar|tar|tgz|zip))
  static_files: static/\1
  upload: static/(.*\.(bz2|gz|rar|tar|tgz|zip))

# index files
- url: /(.+)/
  static_files: static/\1/index.html
  upload: static/(.+)/index.html
  expiration: &quot;15m&quot;

- url: /(.+)
  static_files: static/\1/index.html
  upload: static/(.+)/index.html
  expiration: &quot;15m&quot;

# site root
- url: /
  static_files: static/index.html
  upload: static/index.html
  expiration: &quot;15m&quot;
</code></pre></noscript></div>
</p>

<p>Now if only Google App Engine would support naked domain names... I guess we need to keep something to dream about.</p>
]]></content>
  </entry>
  
</feed>
